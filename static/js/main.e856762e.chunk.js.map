{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.e856762e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://127.0.0.1:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function () {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\"){\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function  apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed/\"\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets/\"\n    if (username){\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}","import React from 'react'\n\nimport {\n  apiTweetAction } from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction) {\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n }","import React from 'react'\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href= `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n    {props.children}\n  </span>\n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ?`${user.first_name} ${user.last_name} ` : null\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}\n\nexport function UserPicture (props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n  </span>\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}","import React, {useEffect, useState } from 'react'\n\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\n\nimport {UserDisplay, UserPicture} from './components'\nimport {DisplayCount} from './utils'\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        console.log(event)\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink/>\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n    </div> : null\n}\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props \n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n        setProfile(response)\n        } \n    }\n    useEffect(() => {\n        if (didLookup ===false){\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        console.log(actionVerb)\n        apiProfileFollowToggle(username, actionVerb, (response, status) =>{\n            console.log(response, status)\n            if (status===200) {\n                setProfile(response)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}","import React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\nimport {\n  UserDisplay,\n  UserPicture\n} from '../profiles'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} />: null\n   }\n    \n  export function Tweet(props) {\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionTweet)\n          }\n        }\n      }\n      \n      return <div className={className} >\n        {isRetweet === true && <div className='mb-2'>\n          <span className='small text-muted'>Retweet by <UserDisplay user={retweeter}/></span>\n        </div>}\n        <div className='d-flex'>\n          <div className=''>\n            <UserPicture user={tweet.user} />\n          </div>\n          <div className='col-11'>\n            <div>\n              <p>\n                <UserDisplay includeFullName user={tweet.user} />\n              </p>\n              <p>{tweet.content}</p>\n              <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n            </div>\n            <div className='btn btn-group px-0'>\n              {(actionTweet && hideActions !== true) && <React.Fragment> \n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}} />\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}} />\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}} />\n                </React.Fragment>\n              }\n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n            </div>     \n          </div>\n        </div>\n      </div>\n    }","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetFeed} from './lookup'\nimport {Tweet} from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true) \n          } \n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweetsInit(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } \n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet tweet={item}\n      didRetweet={handleDidRetweet}\n      className='my-5 py-5 border bg-white text-dark' \n      key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment> \n  }\n","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response)\n    } else {\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)  \n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}>\n      <textarea ref={textAreaRef} required={true} className='form-control'>\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n  </div>\n}\n","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true) \n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweetsInit(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet tweet={item}\n      didRetweet={handleDidRetweet}\n      className='my-5 py-5 border bg-white text-dark' \n      key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment> \n  }","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\nimport {Tweet} from './detail'\nimport {TweetCreate} from './create'\nimport {TweetsList} from './list'\n\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet ===  true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n    <FeedList newTweets={newTweets} {...props}/>\n    </div>\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet ===  true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n    <TweetsList newTweets={newTweets} {...props}/>\n    </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n  useEffect(() => {\n    if (didLookup ===false){\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n  \n  return  tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","// import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from'./tweets'\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport reportWebVitals from './reportWebVitals';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById('twittertwin')\nif (tweetsEl) {\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById('twittertwin-feed')\nif (tweetFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".twittertwin-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), \n    container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twittertwin-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset), \n    container);\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}