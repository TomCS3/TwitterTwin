{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.0b385d9c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://127.0.0.1:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function () {\n    if (xhr.status === 403){\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\") {\n        window.location.href = \"/login?showLoginRequired=true\"\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an errow\"}, 400)\n  }\n  console.log(jsonData)\n  xhr.send(jsonData)\n}","import React from 'react'\n\nimport {\n  apiTweetAction } from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction) {\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n }","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetList(username, callback) {\n    let endpoint = \"/tweets/\"\n    if (username){\n        endpoint = `/tweets/?username=${username}`\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}","import React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <div className='row'>\n    <div className='col-11 mx-auto p-3 border rounded'>\n      <p className='mb-0 text-muted small'>Retweet</p>\n      <Tweet hideActions className={' '} tweet={tweet.parent} />\n    </div>\n    </div> : null\n   }\n    \n  export function Tweet(props) {\n      const {tweet, didRetweet, hideActions} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionTweet)\n          }\n        }\n      }\n      \n      return <div className={className} >\n        <div>\n          <p>{tweet.id} - {tweet.content}</p>\n          <ParentTweet tweet={tweet} />\n        </div>\n        <div className='btn btn-group'>\n          {(actionTweet && hideActions !== true) && <React.Fragment> \n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}} />\n            </React.Fragment>\n          }\n          {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n        </div>     \n      </div>\n    }","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response)\n    } else {\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)  \n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}>\n      <textarea ref={textAreaRef} required={true} className='form-control'>\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n  </div>\n}\n","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setTweetsInit(response)\n            setTweetsDidSet(true) \n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweetsInit(updateFinalTweets)\n    }\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item}\n      didRetweet={handleDidRetweet}\n      className='my-5 py-5 border bg-white text-dark' \n      key={`${index}-{item.id}`} />\n    })\n  }","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\nimport {TweetCreate} from './create'\nimport {TweetsList} from './list'\n\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet ===  true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n    <TweetsList newTweets={newTweets} {...props}/>\n    </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n  useEffect(() => {\n    if (didLookup ===false){\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n  \n  return  tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","// import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from'./tweets'\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {TweetsComponent, TweetDetailComponent} from './tweets';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById('twittertwin')\nif (tweetsEl) {\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".twittertwin-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), \n    container);\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}