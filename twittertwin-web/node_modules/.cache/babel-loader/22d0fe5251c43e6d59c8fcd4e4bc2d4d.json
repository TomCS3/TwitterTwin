{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET'; // \"POST\"\n\n  const url = \"http://127.0.0.1:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an errow\"\n    }, 400);\n  };\n\n  xhr.send();\n}\n\nfunction LikeBtn(props) {\n  const {\n    tweet\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    class: \"btn btn-primary btn-sm\",\n    children: [\" \", tweet.likes, \"Likes\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n_c = LikeBtn;\n\nfunction Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: /*#__PURE__*/_jsxDEV(LikeBtn, {\n        tweet: tweet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Tweet;\n\nfunction App() {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      console.log(response, status);\n\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tweets.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Tweet, {\n            tweet: item,\n            className: \"my-5 py-5 border bg-white text-dark\"\n          }, `${index}-{item.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LikeBtn\");\n$RefreshReg$(_c2, \"Tweet\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/App.js"],"names":["React","useEffect","useState","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","LikeBtn","props","tweet","likes","Tweet","className","id","content","App","tweets","setTweets","myCallback","alert","logo","map","item","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,QAAMC,MAAM,GAAG,KAAf,CAF4B,CAEP;;AACrB,QAAMC,GAAG,GAAG,mCAAZ;AACA,QAAMC,YAAY,GAAG,MAArB;AACAJ,EAAAA,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;AACAH,EAAAA,GAAG,CAACM,MAAJ,GAAa,YAAY;AACvBP,IAAAA,QAAQ,CAACC,GAAG,CAACO,QAAL,EAAeP,GAAG,CAACQ,MAAnB,CAAR;AACD,GAFD;;AAGAR,EAAAA,GAAG,CAACS,OAAJ,GAAc,UAAUC,CAAV,EAAa;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAX,IAAAA,QAAQ,CAAC;AAAC,iBAAW;AAAZ,KAAD,EAA0C,GAA1C,CAAR;AACD,GAHD;;AAIAC,EAAAA,GAAG,CAACa,IAAJ;AACD;;AAGD,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAhB;AACA,sBAAO;AAAQ,IAAA,KAAK,EAAC,wBAAd;AAAA,oBAAyCC,KAAK,CAACC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQH,O;;AAKT,SAASI,KAAT,CAAeH,KAAf,EAAsB;AACpB,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAhB;AACA,QAAMI,SAAS,GAAGJ,KAAK,CAACI,SAAN,GAAkBJ,KAAK,CAACI,SAAxB,GAAoC,yBAAtD;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA,4BACL;AAAA,iBAAIH,KAAK,CAACI,EAAV,SAAiBJ,KAAK,CAACK,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD;;MATQE,K;;AAWT,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,UAAU,GAAG,CAAClB,QAAD,EAAWC,MAAX,KAAsB;AACvCG,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBC,MAAtB;;AACA,UAAIA,MAAM,KAAK,GAAf,EAAmB;AACjBgB,QAAAA,SAAS,CAACjB,QAAD,CAAT;AACD,OAFD,MAEO;AACLmB,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,KAPD;;AAQA5B,IAAAA,UAAU,CAAC2B,UAAD,CAAV;AACD,GAVQ,EAUP,EAVO,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEE,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBACGJ,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAe;AACzB,8BAAO,QAAC,KAAD;AAAO,YAAA,KAAK,EAAED,IAAd;AAAoB,YAAA,SAAS,EAAC;AAA9B,aAA0E,GAAEC,KAAM,YAAlF;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GArCQR,G;;MAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest()\n  const method = 'GET' // \"POST\"\n  const url = \"http://127.0.0.1:8000/api/tweets/\"\n  const responseType = \"json\"\n  xhr.responseType = responseType\n  xhr.open(method, url)\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an errow\"}, 400)\n  }\n  xhr.send()\n}\n\n\nfunction LikeBtn(props) {\n  const {tweet} = props\n  return <button class='btn btn-primary btn-sm'> {tweet.likes}Likes</button>\n}\n\nfunction Tweet(props) {\n  const {tweet} = props\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  return <div className={className}>\n    <p>{tweet.id} - {tweet.content}</p>\n    <div className='btn btn-group'>\n      <LikeBtn tweet={tweet} />\n    </div>\n  </div>\n}\n\nfunction App() {\n  const [tweets, setTweets] = useState([])\n\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      console.log(response, status)\n      if (status === 200){\n        setTweets(response) \n      } else {\n        alert(\"There was an error\")\n      }\n    }\n    loadTweets(myCallback)\n  },[])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          {tweets.map((item, index)=>{\n            return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n          })}\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}