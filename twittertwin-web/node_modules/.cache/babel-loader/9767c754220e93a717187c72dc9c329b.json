{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TweetsList } from './list';\nimport { apiTweetCreate } from './lookup';\n\nfunction TweetCreate(props) {\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const {\n    didTweet\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(tempNewTweets);\n    } else {\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textAreaRef,\n        required: true,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-3\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_c = TweetCreate;\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [canTweet === true && /*#__PURE__*/_jsxDEV(TweetCreate, {\n      className: \"col-12 mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c2 = TweetsComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TweetCreate\");\n$RefreshReg$(_c2, \"TweetsComponent\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js"],"names":["React","useState","TweetsList","apiTweetCreate","TweetCreate","props","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","tempNewTweets","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsComponent","newTweets","setNewTweets","canTweet","unshift"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react'\n\nimport {TweetsList} from './list'\nimport {apiTweetCreate} from './lookup'\n\nfunction TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(tempNewTweets)\n    } else {\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)  \n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}>\n      <textarea ref={textAreaRef} required={true} className='form-control'>\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n  </div>\n}\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets]\n    if (status === 201) {\n      tempNewTweets.unshift(response)\n      setNewTweets(tempNewTweets)\n    } else {\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)  \n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    {canTweet ===  true && <TweetCreate className='col-12 mb-3' />}\n    <TweetsList newTweets={newTweets} {...props}/>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}