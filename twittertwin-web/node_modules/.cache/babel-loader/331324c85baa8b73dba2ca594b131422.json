{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport { apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [canTweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetsComponent\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js"],"names":["React","useEffect","useState","ActionBtn","apiTweetCreate","apiTweetList","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","canTweet","handleBackendUpdate","response","status","tempNewTweets","unshift","alert","handleSubmit","event","preventDefault","newVal","current","value","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAAQC,SAAR,QAAwB,WAAxB;AAEA,SACEC,cADF,EAEEC,YAFF,QAEqB,UAFrB;AAIA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AACrC,QAAMC,WAAW,gBAAGR,KAAK,CAACS,SAAN,EAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMU,QAAQ,GAAGL,KAAK,CAACK,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;AACA,QAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAChD;AACA,QAAIC,aAAa,GAAG,CAAC,GAAGN,SAAJ,CAApB;;AACA,QAAIK,MAAM,KAAK,GAAf,EAAoB;AAClBC,MAAAA,aAAa,CAACC,OAAd,CAAsBH,QAAtB;AACAH,MAAAA,YAAY,CAACK,aAAD,CAAZ;AACD,KAHD,MAGO;AACLE,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD;AACF,GATD;;AAUA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGd,WAAW,CAACe,OAAZ,CAAoBC,KAAnC,CAF8B,CAG9B;;AACApB,IAAAA,cAAc,CAACkB,MAAD,EAAST,mBAAT,CAAd;AACAL,IAAAA,WAAW,CAACe,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACD,GAND;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEjB,KAAK,CAACkB,SAAtB;AAAA,eACJb,QAAQ,KAAM,IAAd,iBAAsB;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACrB;AAAM,QAAA,QAAQ,EAAEO,YAAhB;AAAA,gCACE;AAAU,UAAA,GAAG,EAAEX,WAAf;AAA4B,UAAA,QAAQ,EAAE,IAAtC;AAA4C,UAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADqB;AAAA;AAAA;AAAA;AAAA,YADlB,eASL,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEE,SAAvB;AAAA,SAAsCH;AAAtC;AAAA;AAAA;AAAA;AAAA,YATK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD;;GAhCeD,e;;KAAAA,e","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\nimport {\n  apiTweetCreate,\n  apiTweetList} from './lookup'\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets]\n    if (status === 201) {\n      tempNewTweets.unshift(response)\n      setNewTweets(tempNewTweets)\n    } else {\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)  \n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    {canTweet ===  true && <div className='col-12 mb-3'>\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className='form-control'>\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n      </form>\n      </div>\n      }\n    <TweetsList newTweets={newTweets} {...props}/>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}