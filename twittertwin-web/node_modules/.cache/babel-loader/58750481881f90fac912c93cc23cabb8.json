{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetAction, apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"P6qXvmm+5AyDsJ0n/lMk6wZyO4Q=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s3();\n\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0); // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleActionBackendEvent = (response, status) => {\n    console.log(response, status);\n\n    if (status === 200) {\n      setLikes(response.likes); // setUserLike(true)\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this);\n}\n\n_s3(ActionBtn, \"lqFvXr1nBdlwSt/sxEaEZwfzCw4=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [tweet.id, \" - \", tweet.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), tweet.parent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-11 mx-auto p-3 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0 text-muted small\",\n            children: \"Rewteet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tweet, {\n            className: '',\n            tweet: tweet.parent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js"],"names":["React","useEffect","useState","apiTweetAction","apiTweetCreate","apiTweetList","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleBackendUpdate","response","status","tempNewTweets","unshift","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","map","item","index","ActionBtn","tweet","action","likes","setLikes","actionDisplay","display","handleActionBackendEvent","console","log","handleClick","id","type","Tweet","content","parent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {\n  apiTweetAction,\n  apiTweetCreate,\n  apiTweetList} from './lookup'\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets]\n    if (status === 201) {\n      tempNewTweets.unshift(response)\n      setNewTweets(tempNewTweets)\n    } else {\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)  \n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <div className='col-12 mb-3'>\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className='form-control'>\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n      </form>\n      </div>\n    <TweetsList newTweets={newTweets} />\n    </div>\n}\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setTweetsInit(response)\n            setTweetsDidSet(true) \n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n    })\n  }\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      if (status === 200) {\n        setLikes(response.likes)\n        // setUserLike(true)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n }\n  \nexport function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <div>\n        <p>{tweet.id} - {tweet.content}</p>\n        {tweet.parent && <div className='row'>\n          <div className='col-11 mx-auto p-3 border rounded'>\n            <p className='mb-0 text-muted small'>Rewteet</p>\n            <Tweet className={''} tweet={tweet.parent} />\n          </div>\n          </div>}\n      </div>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action={{type: \"like\", display:\"Likes\"}} />\n        <ActionBtn tweet={tweet} action={{type: \"unlike\", display:\"Unlike\"}} />\n        <ActionBtn tweet={tweet} action={{type: \"retweet\", display:\"Retweet\"}} />\n      </div>\n    </div>\n  }"]},"metadata":{},"sourceType":"module"}