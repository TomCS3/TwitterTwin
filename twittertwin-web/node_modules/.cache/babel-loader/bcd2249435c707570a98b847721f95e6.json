{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/_jsxDEV(Tweet, {\n    isRetweet: true,\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }, this) : null;\n}\n_c = ParentTweet;\nexport function Tweet(props) {\n  _s();\n\n  const {\n    tweet,\n    didRetweet,\n    hideActions,\n    isRetweet\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [isRetweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"small text-muted\",\n        children: \"Retweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n          children: tweet.user.username[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [tweet.user.first_name, \" \", tweet.user.last_name, \" \", \"@\", tweet.user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n            tweet: tweet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-group px-0\",\n          children: [actionTweet && hideActions !== true && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"like\",\n                display: \"Likes\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"unlike\",\n                display: \"Unlike\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"retweet\",\n                display: \"Retweet\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 57\n          }, this), isDetail === true ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary btn-sm\",\n            onClick: handleLink,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Tweet, \"4XwhAxG+zaKvQWj4Pjf6LY5//hs=\");\n\n_c2 = Tweet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ParentTweet\");\n$RefreshReg$(_c2, \"Tweet\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","ParentTweet","props","tweet","parent","Tweet","didRetweet","hideActions","isRetweet","actionTweet","setActionTweet","className","path","window","location","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","event","preventDefault","href","handlePerformAction","newActionTweet","status","user","username","first_name","last_name","content","type","display"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet hideActions className={' '} tweet={tweet.parent} />: null\n   }\n    \n  export function Tweet(props) {\n      const {tweet, didRetweet, hideActions, isRetweet} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} border rounded` : className\n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionTweet)\n          }\n        }\n      }\n      \n      return <div className={className} >\n        {isRetweet === true && <div className='mb-2'>\n          <span className='small text-muted'>Retweet</span>\n        </div>}\n        <div className='d-flex'>\n          <div className=''>\n            <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n              {tweet.user.username[0]}\n            </span>\n          </div>\n          <div className='col-11'>\n            <div>\n              <p>\n                {tweet.user.first_name}{\" \"}\n                {tweet.user.last_name}{\" \"}\n                @{tweet.user.username}\n              </p>\n              <p>{tweet.content}</p>\n              <ParentTweet tweet={tweet} />\n            </div>\n            <div className='btn btn-group px-0'>\n              {(actionTweet && hideActions !== true) && <React.Fragment> \n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}} />\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}} />\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}} />\n                </React.Fragment>\n              }\n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n            </div>     \n          </div>\n        </div>\n      </div>\n    }"]},"metadata":{},"sourceType":"module"}