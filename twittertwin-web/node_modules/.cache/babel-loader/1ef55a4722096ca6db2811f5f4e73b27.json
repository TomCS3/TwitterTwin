{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 123\n    });\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"6Fs2qrxJOyMJekZPXtpzbz0TugM=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s3();\n\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n}\n\n_s3(ActionBtn, \"IF0IXDYzKRa1MgKiZWFZOaazeds=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlikes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","final","concat","length","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {loadTweets} from '../lookup'\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 123\n    })\n    setNewTweets(tempNewTweets)\n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <div className='col-12 mb-3'>\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className='form-control'>\n\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n      </form>\n      </div>\n    <TweetsList newTweets={newTweets} />\n    </div>\n}\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status === 200){\n          setTweetsInit(response) \n        } else {\n          alert(\"There was an error\")\n        }\n      }\n      loadTweets(myCallback)\n    },[])\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n    })\n  }\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleClick = (event) => {\n      event.preventDefault()\n      if (action.type === 'like') {\n        if (userLike === true) {\n          setLikes(likes - 1)\n          setUserLike(false)\n        }\n        else{\n          setLikes(likes + 1)\n          setUserLike(true)\n        }\n      }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n }\n  \nexport function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p>{tweet.id} - {tweet.content}</p>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action={{type: \"like\", display:\"Likes\"}} />\n        <ActionBtn tweet={tweet} action={{type: \"unlike\", display:\"Unlikes\"}} />\n        <ActionBtn tweet={tweet} action={{type: \"retweet\", display:\"Retweet\"}} />\n      </div>\n    </div>\n  }"]},"metadata":{},"sourceType":"module"}