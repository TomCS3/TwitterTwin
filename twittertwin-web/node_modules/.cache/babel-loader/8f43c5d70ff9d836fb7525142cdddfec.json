{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\n\nfunction UserLink(props) {\n  const {\n    username\n  } = props;\n\n  const handleUserLink = event => {\n    window.location.href = `/profiles/${username}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    onClick: handleUserLink,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\n_c = UserLink;\n\nfunction UserDisplay(props) {\n  const {\n    user,\n    includeFullName\n  } = props;\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [nameDisplay, /*#__PURE__*/_jsxDEV(UserLink, {\n      username: user.username,\n      children: [\"@\", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = UserDisplay;\n\nfunction UserPicture(props) {\n  const {\n    user\n  } = props;\n  return /*#__PURE__*/_jsxDEV(UserLink, {\n    username: user.username,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n      children: user.username[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = UserPicture;\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/_jsxDEV(Tweet, {\n    isRetweet: true,\n    retweeter: props.retweeter,\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 27\n  }, this) : null;\n}\n_c4 = ParentTweet;\nexport function Tweet(props) {\n  _s();\n\n  const {\n    tweet,\n    didRetweet,\n    hideActions,\n    isRetweet,\n    retweeter\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [isRetweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"small text-muted\",\n        children: [\"Retweet by \", /*#__PURE__*/_jsxDEV(UserDisplay, {\n          user: retweeter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(UserPicture, {\n          user: tweet.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(UserDisplay, {\n              includeFullName: true,\n              user: tweet.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n            tweet: tweet,\n            retweeter: tweet.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-group px-0\",\n          children: [actionTweet && hideActions !== true && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"like\",\n                display: \"Likes\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"unlike\",\n                display: \"Unlike\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"retweet\",\n                display: \"Retweet\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 57\n          }, this), isDetail === true ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary btn-sm\",\n            onClick: handleLink,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Tweet, \"4XwhAxG+zaKvQWj4Pjf6LY5//hs=\");\n\n_c5 = Tweet;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"UserLink\");\n$RefreshReg$(_c2, \"UserDisplay\");\n$RefreshReg$(_c3, \"UserPicture\");\n$RefreshReg$(_c4, \"ParentTweet\");\n$RefreshReg$(_c5, \"Tweet\");","map":{"version":3,"sources":["/Users/tom/Dev/CompSci/cs50/WebProgramming/TwitterClone/TwitterTwin/twittertwin-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","UserLink","props","username","handleUserLink","event","window","location","href","children","UserDisplay","user","includeFullName","nameDisplay","first_name","last_name","UserPicture","ParentTweet","tweet","parent","retweeter","Tweet","didRetweet","hideActions","isRetweet","actionTweet","setActionTweet","className","path","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","preventDefault","handlePerformAction","newActionTweet","status","content","type","display"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\nfunction UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href= `/profiles/${username}`\n  }\n  return <React.Fragment onClick={handleUserLink}>\n    {props.children}\n  </React.Fragment>\n}\n\nfunction UserDisplay(props) {\n  const {user, includeFullName} = props\n  const nameDisplay = includeFullName === true ?`${user.first_name} ${user.last_name} ` : null\n\n  return <React.Fragment>\n    {nameDisplay}\n    <UserLink username={user.username}>@{user.username}</UserLink>\n  </React.Fragment>\n}\n\nfunction UserPicture (props) {\n  const {user} = props\n  return <UserLink username={user.username}><span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n    {user.username[0]}\n  </span></UserLink>\n}\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} />: null\n   }\n    \n  export function Tweet(props) {\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionTweet)\n          }\n        }\n      }\n      \n      return <div className={className} >\n        {isRetweet === true && <div className='mb-2'>\n          <span className='small text-muted'>Retweet by <UserDisplay user={retweeter}/></span>\n        </div>}\n        <div className='d-flex'>\n          <div className=''>\n            <UserPicture user={tweet.user} />\n          </div>\n          <div className='col-11'>\n            <div>\n              <p>\n                <UserDisplay includeFullName user={tweet.user} />\n              </p>\n              <p>{tweet.content}</p>\n              <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n            </div>\n            <div className='btn btn-group px-0'>\n              {(actionTweet && hideActions !== true) && <React.Fragment> \n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}} />\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}} />\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}} />\n                </React.Fragment>\n              }\n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n            </div>     \n          </div>\n        </div>\n      </div>\n    }"]},"metadata":{},"sourceType":"module"}